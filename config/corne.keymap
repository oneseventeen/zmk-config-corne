/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        clear_bt {
            bindings = <&bt BT_CLR>;
            key-positions = <12 17>;
            layers = <1>;
        };

        clear_all_bt {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <13 14 15 16>;
            layers = <1>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <19 20>;
        };

        underscore {
            bindings = <&kp LS(MINUS)>;
            key-positions = <31 32>;
        };

        cycle_window_right {
            bindings = <&kp LG(GRAVE)>;
            key-positions = <17 23>;
            layers = <0>;
        };

        cycle_window_left {
            bindings = <&kp LG(TILDE)>;
            key-positions = <12 18>;
            layers = <0>;
        };
    };

    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <125>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q         &kp W            &kp E            &kp R              &kp T        &kp Y    &kp U         &kp I        &kp O        &kp P                         &kp BSPC
&kp LCTRL  &hrm LCTRL A  &hrm LEFT_ALT S  &hrm LEFT_GUI D  &hrm LEFT_SHIFT F  &kp G        &kp H    &hrm RSHFT J  &hrm RGUI K  &hrm RALT L  &hrm RIGHT_CONTROL SEMICOLON  &kp SQT
&kp LSHFT  &kp Z         &kp X            &kp C            &kp V              &kp B        &kp N    &kp M         &kp COMMA    &kp DOT      &kp FSLH                      &kp ESC
                                          &kp LGUI         &mo 1              &kp SPACE    &kp RET  &mo 2         &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&trans     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &kp LS(LG(LC(NUMBER_4)))
&kp LSHFT  &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                       &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR           &kp PRCNT           &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &kp SQT            &kp LESS_THAN       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &kp DOUBLE_QUOTES  &kp GREATER_THAN    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans             &kp SPACE           &kp RET    &trans     &kp RALT
            >;
        };
    };
};
